class 학생 :
    name = ''
    n = 0
    hei = 0.0
    def 학생정보보기(self):
        print('이름 :',self.name, '번호:', self.n, '키:',self.hei)

    def __init__(self,name,n,hei):
        self.학생정보입력(name, n, hei)

    def 학생정보입력(self,name,n,hei):
        self.name = name
        self.n = n
        self.hei = hei

# 다른 사람들이 '학생'클래스 사용
# 클래스 업데이트 요청

# 상속 : 사람이 복붙을 하면 사람이 고쳐야하기 때문에, 컴퓨터가 복붙을 해서 컴퓨터가 고치게 한다 (클래스 복붙)
class 학생2(학생) :
    # 학생 클래스의 변수와 메서드를 복붙
    def __del__(self):
        # __del__(소멸자) : 소멸자, 객체가 없어질 때 사용되는 메서드
        print('프로그램 종료')

class 학생3(학생):
    # 학생 클래스가 복붙됨
    def 학생정보보기(self):
        print('==이름 :',self.name, '번호:', self.n, '키:',self.hei)
        # 원본 클래스는 '부모 클래스', 복붙받은 클래스는 '자식 클래스'
        # 만약에, 부모와 자식이 메서드명이 곂치면
        # 자신의 메서드가 우선으로 사용된다

a = 학생2('철수', 1, 177.4)
a.학생정보보기()

b = 학생3('짱구', 2, 185.2)
b.학생정보보기()        # 비록 '학생'을 복붙했어도 '학생3'의 메서드가 우선적으로 사용됨 (이름 곂치면)
# 상속 == 클래스 복붙